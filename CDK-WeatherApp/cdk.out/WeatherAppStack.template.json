{
 "Resources": {
  "openWeatherParameter6C274A6E": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Name": "/openweather/config",
    "Type": "String",
    "Value": "{\"bucket_name\":\"riding-videos-tony\",\"key\":\"openweathermap/\",\"AWS_REGION\":\"us-west-2\",\"SENDER\":\"patlolla.akhil@gmail.com\",\"RECIPIENT\":\"patlolla.akhil@gmail.com\",\"SUBJECT\":\"OpenWeatherMap\",\"BODY_TEXT\":\"OpenWeatherMap - Reports\",\"CHARSET\":\"UTF-8\",\"api_key\":\"9c62136e546fb2e37abb9e18a138a113\",\"base_url\":\"http://api.openweathermap.org/data/2.5/forecast?\",\"s3_url\":\"https://riding-videos-tony.s3.us-west-2.amazonaws.com/openweathermap\"}"
   },
   "Metadata": {
    "aws:cdk:path": "WeatherAppStack/openWeatherParameter/Resource"
   }
  },
  "awsclibashpython5E3F95DA": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "python3.10",
     "python3.11",
     "python3.12"
    ],
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "44edf579f91703e9c70ee2f837f1c635a0740d4dd5862dcb4f405b4b493c816a.zip"
    },
    "LayerName": "aws-cli-bash-python"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WeatherAppStack/aws-cli-bash-python/Resource",
    "aws:asset:path": "asset.44edf579f91703e9c70ee2f837f1c635a0740d4dd5862dcb4f405b4b493c816a.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "matplotliblayerE6338969": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "CompatibleRuntimes": [
     "python3.10",
     "python3.11",
     "python3.12"
    ],
    "Content": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "7644f1da7085b4fd2d50b47c7d73a42fa3ed486ab98bb777610cf932f08df72f.zip"
    },
    "LayerName": "matplotlib-layer"
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "WeatherAppStack/matplotlib-layer/Resource",
    "aws:asset:path": "asset.7644f1da7085b4fd2d50b47c7d73a42fa3ed486ab98bb777610cf932f08df72f.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "lambdaservicerole34E512C8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": {
         "Fn::Join": [
          "",
          [
           "lambda.",
           {
            "Ref": "AWS::Region"
           },
           ".amazonaws.com"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
    ],
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "s3:*",
         "Effect": "Allow",
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":s3:::riding-videos-tony"
            ]
           ]
          },
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":s3:::riding-videos-tony/*"
            ]
           ]
          }
         ]
        },
        {
         "Action": "logs:*",
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:logs:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":*"
           ]
          ]
         }
        },
        {
         "Action": "cloudwatch:*",
         "Effect": "Allow",
         "Resource": {
          "Fn::Join": [
           "",
           [
            "arn:aws:cloudwatch:",
            {
             "Ref": "AWS::Region"
            },
            ":",
            {
             "Ref": "AWS::AccountId"
            },
            ":*"
           ]
          ]
         }
        },
        {
         "Action": "ses:*",
         "Effect": "Allow",
         "Resource": [
          "*",
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ssm:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":parameter",
             {
              "Ref": "openWeatherParameter6C274A6E"
             }
            ]
           ]
          }
         ]
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "lambdaservicerolepolicy"
     }
    ],
    "RoleName": "lambda-service-role"
   },
   "Metadata": {
    "aws:cdk:path": "WeatherAppStack/lambda-service-role/Resource"
   }
  },
  "WeatherForecaseA84DB818": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "c13e0195e8239a30baaa38d116574d4307bbfc021c5bca4b3677e6f4ff1835bd.zip"
    },
    "Environment": {
     "Variables": {}
    },
    "Handler": "index.handler",
    "Layers": [
     "arn:aws:lambda:us-west-2:336392948345:layer:AWSSDKPandas-Python310:21"
    ],
    "Role": {
     "Fn::GetAtt": [
      "lambdaservicerole34E512C8",
      "Arn"
     ]
    },
    "Runtime": "python3.10",
    "Timeout": 300
   },
   "DependsOn": [
    "lambdaservicerole34E512C8"
   ],
   "Metadata": {
    "aws:cdk:path": "WeatherAppStack/WeatherForecase/Resource",
    "aws:asset:path": "asset.c13e0195e8239a30baaa38d116574d4307bbfc021c5bca4b3677e6f4ff1835bd",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "Rule4C995B7F": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "cron(0 0 * * ? *)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "WeatherForecaseA84DB818",
        "Arn"
       ]
      },
      "Id": "Target0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "WeatherAppStack/Rule/Resource"
   }
  },
  "RuleAllowEventRuleWeatherAppStackWeatherForecase08035E875713749D": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "WeatherForecaseA84DB818",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "Rule4C995B7F",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "WeatherAppStack/Rule/AllowEventRuleWeatherAppStackWeatherForecase08035E87"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WNQWvDMAyFf0vvjtZk0Pta2GmHkkKvRXW0oCaWwZJbhsl/H27L6E7vPb1PUgftZgPrFd608cPUzHyGcjD0k8ObnopqqDmxjHtMGMgoud23/IXF6Ttss5/ItqjkZgznAaF84Q+lIyXlKHXhX/7M4u1ZvPo9pcBakXr2hKpkCh9VHGOA0seZKlh1cXQlMYXS5+c0z7Qs7s4fDEeW0fWkMSf/6F/8LsrAdv8kcSC46Nu166BtYb26KHOTshgHgv6hvyvBqxcpAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "WeatherAppStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-3"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-4"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      }
     ]
    },
    {
     "Fn::Equals": [
      {
       "Ref": "AWS::Region"
      },
      "us-west-2"
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}